//给你一个链表,删除链表的倒数第n个结点,并且返回链表的头结点

public ListNode removeNthFromEnd(ListNode head,int n) {
  //虚拟头结点
  ListNode dummy = new ListNode(-1);
  dummy.next = head;
  //删除倒数第N个,要先找倒数第n+1个节点
  ListNode x = findFromEnd(dummy, n+1);
  //删除倒数第n个节点
  x.next = x.next.next;
  return dummy.next;
}
 //返回链表的倒数第k个节点
private ListNode findFromEnd(ListNode head,int k) {
  ListNode p1 = head;
  //p1先走k步
  for(int i = 0; i<k;i++) {
    p1 = p.next
  }
   ListNode p2 = head;
   // p1 和 p2 同时走 n - k 步
   while (p1 != null) {
       p2 = p2.next;
       p1 = p1.next;
   }
   // p2 现在指向第 n - k + 1 个节点，即倒数第 k 个节点
   return p2;
}
